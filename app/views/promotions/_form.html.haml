= form_for @promotion do |f|
  .promotion-type
    .tab-label
      %h3 1.Promotion Type
    .tab-content
      = f.select(:promotion_type, options_for_select(PROMOTION_TYPE, selected: @promotion.promotion_type), prompt: 'Select promotion type')
  .clearfix
  %hr
  .hidden-content
    .promotion-details
      .tab-label
        %h3 2.Promotion Details
      .tab-content
        - if (@promotion.persisted? && @promotion.volume_amount?) || @promotion.new_record?
          .tier-tab.volume-option{class: "#{(@promotion.promotion_type == "volume_amount" ? "" : "hidden")}", disable: "#{(@promotion.promotion_type == "spend_amount" ? true : false)}"}
            .table-discount
              %table.table-hover.promotion-volume-table
                %thead
                  %tr
                    %th Min Qty
                    %th Discount %
                    %th
                %tbody
                  = f.fields_for :promotion_details do |detail|
                    = render "volume_option_line", detail: detail
            .button-bar
              %a.btn.btn-default{id: "add_more_volume"}  Add another tier
        - if (@promotion.persisted? && @promotion.spend_amount?) || @promotion.new_record?
          .tier-tab.spend-amount-option{class: "#{(@promotion.promotion_type == "spend_amount" ? "" : "hidden")}", disabled: "disabled"}
            %table.table-hover.promotion-spend-table
              %thead
                %tr
                  %th Min Spend
                  %th Discount
                  %th
                  %th
              %tbody
                %tr
                  %td
                    = text_field_tag nil, 'Minimum Amount Spend', class: "text_input", readonly: true
                  %td
                    = text_field_tag nil, '% Discount', class: "text_input", readonly: true
                = f.fields_for :promotion_details do |detail|
                  = render "spend_amount_option_line", detail: detail
            .button-bar
              %a.btn.btn-default{id: "add_more_spend_amount"}  Add another tier
          %hr
        .product-tab
          %h5 Select products that will have these volume discounts applied
          -#= f.association :products, as: :select, multiple: true, input_html: { class: 'chosen-select' }
          -#- if @promotion.persisted?
          -#= f.association :products, as: :select, input_html: { class: 'chosen-select', multiple: true }
          -#- else
          = f.select(:product, options_for_select(products.collect{|a| [a.attributes["title"], a.attributes["id"].to_i] }, selected: @promotion.product), { prompt: 'Select products'}, {class: "select_product" , multiple: "true" })
          -#= f.select(:products, options_for_select(ShopifyAPI::Product.all.collect{|a| [a.attributes["title"], [a.attributes["id"], a.attributes["title"]]] }), { prompt: 'Select products'}, {class: "select_product" , multiple: "true" })
          -#%h5 Select collections that will have these volume discounts applied
          -#= f.select("colection", options_for_select(ShopifyAPI::Product.all.collect{|a| [a.attributes["title"], a.attributes["id"]] }), prompt: 'Select collections')
          = f.check_box :all_product, { id: "all_products"}
          %label{:for => "all_products"} or apply these volume discounts across the entire
          .btn.btn-default#remove_products  Remove all products
          -#%hr
        -#.qty-option-tab
        -#  %h5 Sum up Quantities:
        -#  = f.radio_button("qty_option", "per_qty")
        -#  = label 'promotion[per_qty]', 'Per Quantity'``
        -#  = f.radio_button("qty_option", "per_product")
        -#  = label 'promotion[per_product]', 'Per Product'
        -#  = f.radio_button("qty_option", "per_item")
        -#  = label 'promotion[per_item]', 'Across all Selected Items'
        -#  %hr
        -#.message-tab
        -#  %h5 Upsell Message
        -#  = text_field('messages[up_sell]', nil, class: "text_input")
        -#  %h5 Success Message
        -#  = text_field('messages[success]', nil, class: "text_input")
        -#  %h5 Internal name (only you will see this)
        -#  = text_field('messages[internal]', nil, class: "text_input")
    .clearfix
    %hr
    .promotion-optional
      .tab-label
        %h3 3.Promotion Optional
      .tab-content
        .date-card-section
          .start-at
            %h5 Promotion start at
            = f.text_field(:valid_date, class: "text_input")
          .end-at
            %h5 Promotion end at
            = f.text_field(:end_date, class: "text_input")
        %hr
        -#.customer-section
        -#  %h5 Only show offer for customers tagged with any of the following
        -#  = text_field('promotion[customers]', nil, class: "text_input")
    .clearfix
    %hr
  .button-group
    = f.submit 'Save Promotion', class: 'btn btn-primary'